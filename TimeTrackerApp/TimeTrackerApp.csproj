<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <UserSecretsId>47f7654b-1102-4c12-847e-45dd8ace3057</UserSecretsId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FluentMigrator" Version="3.3.2" />
    <PackageReference Include="FluentMigrator.Runner" Version="3.3.2" />
    <PackageReference Include="FluentMigrator.Runner.SqlServer" Version="3.3.2" />
    <PackageReference Include="GraphQL" Version="5.3.3" />
    <PackageReference Include="GraphQL.Authorization" Version="5.0.0" />
    <PackageReference Include="GraphQL.MicrosoftDI" Version="5.3.3" />
    <PackageReference Include="GraphQL.Server.Authorization.AspNetCore" Version="6.1.1" />
    <PackageReference Include="GraphQL.Server.Transports.AspNetCore" Version="6.1.1" />
    <PackageReference Include="GraphQL.Server.Ui.Altair" Version="7.0.0" />
    <PackageReference Include="GraphQL.SystemTextJson" Version="5.3.3" />
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="7.0.0-preview.7.22375.6" />
    <PackageReference Include="Microsoft.Extensions.Hosting.Abstractions" Version="7.0.0-preview.7.22375.6" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.8" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="6.0.8" />
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.7.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="ncrontab" Version="3.3.1" />
    <PackageReference Include="Quartz" Version="3.4.0" />
    <PackageReference Include="Quartz.Extensions.DependencyInjection" Version="3.4.0" />
    <PackageReference Include="Quartz.Extensions.Hosting" Version="3.4.0" />
    <PackageReference Include="Quartz.Serialization.Json" Version="3.4.0" />
    <PackageReference Include="System.Collections" Version="4.3.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\src\store\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\src\store\**" />
    <EmbeddedResource Remove="ClientApp\src\store\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\src\store\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\components\Layout\Index.tsx" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\TimeTrackerApp.Business\TimeTrackerApp.Business.csproj" />
    <ProjectReference Include="..\TimeTrackerApp.MsSql\TimeTrackerApp.MsSql.csproj" />
  </ItemGroup>

  <ItemGroup>
    <_ContentIncludedByDefault Remove="ClientApp\build\asset-manifest.json" />
    <_ContentIncludedByDefault Remove="ClientApp\build\manifest.json" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\src\helpers\enums.ts" />
    <TypeScriptCompile Include="ClientApp\src\types\app.types.ts" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>